<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<project basedir="." default="build" name="Media-Downloader">
	<property environment="env" />
	
	<property name="name.jar"     value="media-downloader"    />
	<property name="path.javafx"  value="/usr/share/openjfx"  />
	<property name="path.cwd"     value="."                   />
	<property name="path.bin"     value="${path.cwd}/bin"     />
	<property name="path.lib"     value="${path.cwd}/lib"     />
	<property name="path.build"   value="${path.cwd}/build"   />
	<property name="path.etc"     value="${path.cwd}/etc"     />
	<property name="path.src"     value="${path.cwd}/src"     />
	<property name="path.scripts" value="${path.etc}/scripts" />
	
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="11" />
	<property name="source" value="11" />
	<property name="modules" value="javafx.controls,javafx.base,javafx.graphics,javafx.web,sune.util.load,sune.memory,ssdf2,sune.api.process,infomas.asl,org.jsoup" />
	
	<path id="classpath.libraries">
		<pathelement location="lib/infomas-asl.jar" />
		<pathelement location="lib/jsoup.jar" />
		<pathelement location="lib/ssdf2.jar" />
		<pathelement location="lib/sune-memory.jar" />
		<pathelement location="lib/sune-process-api.jar" />
		<pathelement location="lib/sune-utils-load.jar" />
	</path>
	<path id="classpath.javafx">
		<pathelement location="${path.javafx}/lib/javafx.base.jar" />
		<pathelement location="${path.javafx}/lib/javafx.controls.jar" />
		<pathelement location="${path.javafx}/lib/javafx.fxml.jar" />
		<pathelement location="${path.javafx}/lib/javafx.graphics.jar" />
		<pathelement location="${path.javafx}/lib/javafx.media.jar" />
		<pathelement location="${path.javafx}/lib/javafx.swing.jar" />
		<pathelement location="${path.javafx}/lib/javafx.web.jar" />
		<pathelement location="${path.javafx}/lib/javafx-swt.jar" />
	</path>
	<path id="classpath.mediadownloader">
		<pathelement location="${path.bin}" />
		<path refid="classpath.libraries" />
		<path refid="classpath.javafx" />
	</path>
	
	<path id="modulepath.libraries">
		<path refid="classpath.libraries" />
	</path>
	<path id="modulepath.javafx">
		<path refid="classpath.javafx" />
	</path>
	<path id="modulepath.mediadownloader">
		<path refid="modulepath.libraries" />
		<path refid="modulepath.javafx" />
	</path>
	
	<target name="compile" depends="copy-resources,compile-java" />
	<target name="build" depends="build-jar,build-jar-src" />
	<target name="build-jre" depends="build-jar-jre" />
	
	<target name="clean">
		<echo message="Deleting the bin directory..." />
		<delete dir="${path.bin}" />
		<echo message="Deleting the build directory..." />
		<delete dir="${path.build}" />
	</target>
	
	<target name="init-compile">
		<echo message="Creating the bin directory..." />
		<mkdir dir="${path.bin}" />
	</target>
	
	<target name="init-build">
		<echo message="Creating the build directory..." />
		<mkdir dir="${path.build}" />
	</target>
	
	<target name="copy-resources" depends="init-compile">
		<echo message="Copying resources..." />
		<copy includeemptydirs="false" todir="${path.bin}">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	
	<target name="compile-java" depends="init-compile">
		<echo message="Compiling Java files..." />
		<javac debug="true" debuglevel="${debuglevel}" destdir="${path.bin}" deprecation="false" includeantruntime="false" source="${source}" target="${target}" modulepathref="modulepath.mediadownloader">
			<src path="src" />
			<classpath refid="classpath.mediadownloader" />
			<compilerarg line="--add-modules ${modules}" />
		</javac>
	</target>
	
	<target name="build-jar" depends="init-build,compile">
		<echo message="Building JAR file..." />

		<!-- Create a temporary JAR file with content of all external libraries -->
		<jar destfile="${path.build}/${name.jar}-dirty.jar">
			<!-- Include internally required libraries -->
			<zipfileset src="${path.lib}/sune-utils-load.jar" excludes="META-INF/*.sf,module-info.class,/*.md" />
			<zipfileset src="${path.lib}/ssdf2.jar"           excludes="META-INF/*.sf,module-info.class,/*.md" />
		</jar>

		<jar destfile="${path.build}/${name.jar}.jar">
			<!-- Configure JAR's Manifest file -->
			<manifest>
				<attribute name="Main-Class" value="sune.app.mediadown.App" />
				<attribute name="Class-Path" value="."                      />
			</manifest>

			<!-- Include the compiled files -->
			<fileset dir="${path.bin}" />
			<!-- Include internally required libraries -->
			<zipfileset src="${path.build}/${name.jar}-dirty.jar" excludes="META-INF/*.sf,module-info.class,/*.md" />
		</jar>

		<!-- Delete the temporary JAR file -->
		<delete file="${path.build}/${name.jar}-dirty.jar" />
	</target>
	
	<target name="build-jar-src" depends="init-build">
		<echo message="Building source ZIP file..." />
		<zip destfile="${path.build}/${name.jar}-source.jar" basedir="${path.src}" />
	</target>
	
	<target name="build-jar-jre" depends="init-build,compile">
		<echo message="Building JAR file for building custom JRE..." />

		<jar destfile="${path.etc}/jre/${name.jar}-jre.jar">
			<!-- Configure JAR's Manifest file -->
			<manifest>
				<attribute name="Main-Class" value="sune.app.mediadown.App" />
				<attribute name="Class-Path" value="."                      />
			</manifest>

			<!-- Include the compiled files -->
			<fileset dir="${path.bin}" />
		</jar>
	</target>
	
	<target name="dist-single" depends="build">
		<echo message="Building distribution archive for '${arg.os}'..." />
		<exec executable="/bin/bash">
			<arg value="${path.scripts}/dist.sh" />
			<arg value="${arg.os}" />
		</exec>
	</target>
	
	<target name="dist-windows"><antcall target="dist-single"><param name="arg.os" value="windows" /></antcall></target>
	<target name="dist-linux"><antcall target="dist-single"><param name="arg.os" value="linux" /></antcall></target>
	<target name="dist-osx"><antcall target="dist-single"><param name="arg.os" value="osx" /></antcall></target>
	<target name="dist-all" depends="dist-windows,dist-linux,dist-osx"></target>
</project>
